version: 2.1

orbs:
  win: circleci/windows@5.0 # 使用 Windows orb
  # python: circleci/python@2.0 # <--- 移除 python orb 的引用，因为我们不再使用它的 install-packages

jobs:
  build: # 这是作业的定义
    executor: win/default # 使用 Windows orb 提供的默认 executor
    steps:
      - checkout # 对应 actions/checkout@v4

      # 替代 python/install-packages:
      - run:
          name: Set up Python and Install dependencies
          command: |
            # 1. 设置 Python 环境 (win/default executor 应该已经预装了 Python)
            #    如果需要特定版本，可能需要使用 win/setup-python 或手动下载安装
            #    这里假设 win/default 提供的 Python 版本满足要求
            
            # 2. 升级 pip
            python -m pip install --upgrade pip
            
            # 3. 安装依赖
            pip install nuitka==2.7.10 pyside6==6.9.1 requests
            
            # 确保命令成功执行，PowerShell 中 $LASTEXITCODE 用于获取上一个命令的退出码
            if ($LASTEXITCODE -ne 0) { exit 1 }

      - run:
          name: Build with Nuitka
          command: |
            nuitka --standalone --onefile --enable-plugin=pyside6 --windows-console-mode=disable --windows-icon-from-ico=icon.ico --include-data-files="app.exe=app.exe" --include-data-files="icon.ico=icon.ico" --lto=yes --assume-yes-for-downloads activation_ui.py
            if ($LASTEXITCODE -ne 0) { exit 1 }

      - store_artifacts: # 对应 actions/upload-artifact@v4
          path: activation_ui.exe
          destination: activation_ui.exe # Artifacts 的名称

workflows:
  build_workflow: # 这是工作流的定义
    jobs:
      - build: # 这里是工作流中引用的作业，并应用 filters
          filters: # filters 必须在这里，作为 build 作业在 workflow 中的配置
            branches:
              only:
                - main # 只在 main 分支上触发
