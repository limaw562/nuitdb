version: 2.1

orbs:
  python: circleci/python@2.0.0 # 使用 CircleCI Python Orb
  windows: circleci/windows@5.0 # 使用 CircleCI Windows Orb

jobs:
  build:
    executor: windows/default # 使用 Windows Orb 提供的默认 executor
    steps:
      - checkout

      - run:
          name: Set up Python
          command: |
            # Windows Orb 应该已经设置了 Python，这里可以根据需要调整版本
            # 例如，如果您需要特定版本的 Python，可以使用 pyenv 或 Chocolatey 安装
            # 这里假设默认的 Python 环境满足要求
            python --version

      - run:
          name: Install dependencies
          command: |
            python -m pip install --upgrade pip
            pip install nuitka==2.7.10 pyside6==6.9.1 requests

      - run:
          name: Build with Nuitka
          command: |
            nuitka --standalone --onefile --enable-plugin=pyside6 --windows-console-mode=disable --windows-icon-from-ico=icon.ico --include-data-files="app.exe=app.exe" --include-data-files="icon.ico=icon.ico" --lto=yes --assume-yes-for-downloads activation_ui.py
            # 在 PowerShell 中，可以使用 $LASTEXITCODE 来检查上一个命令的退出码
            if ($LASTEXITCODE -ne 0) { exit 1 }

      - store_artifacts:
          name: Upload activation_ui.exe
          path: activation_ui.exe # Nuitka 生成的可执行文件通常在当前目录或 Nuitka 默认的输出目录

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
            paths:
              - 'app.exe' # 仅当 app.exe 路径有变化时触发
              - 'icon.ico' # 如果 icon.ico 也是触发条件，也需要包含
              - 'activation_ui.py' # Nuitka 编译的源文件也应该作为触发条件
